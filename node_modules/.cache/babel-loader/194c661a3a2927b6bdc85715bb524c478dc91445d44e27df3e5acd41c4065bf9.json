{"ast":null,"code":"const OPENAI_API_KEY = \"YOUR_OPENAI_API_KEY\"; // 로그인 토큰\n\nconst ChatGptService = async message => {\n  try {\n    const response = await fetch(\"http://localhost:8080/api/gpt/question\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 로그인 토큰\n      },\n      body: JSON.stringify({\n        prompt: message,\n        max_tokens: 150\n      }),\n      credentials: \"include\" // 클라이언트와 서버가 통신할때 쿠키 값을 공유하겠다는 설정\n    });\n    const data = await response.json();\n    return data.choices[0].text.trim();\n  } catch (error) {\n    console.error(\"OpenAI API Error:\", error);\n    return \"Sorry, I am unable to respond at the moment.\";\n  }\n};\n_c = ChatGptService;\nexport default ChatGptService;\nvar _c;\n$RefreshReg$(_c, \"ChatGptService\");","map":{"version":3,"names":["OPENAI_API_KEY","ChatGptService","message","response","fetch","method","headers","body","JSON","stringify","prompt","max_tokens","credentials","data","json","choices","text","trim","error","console","_c","$RefreshReg$"],"sources":["C:/GitHub/2024_1_Web7/src/function/ChatGptService.js"],"sourcesContent":["const OPENAI_API_KEY = \"YOUR_OPENAI_API_KEY\"; // 로그인 토큰\r\n\r\nconst ChatGptService = async (message) => {\r\n  try {\r\n    const response = await fetch(\"http://localhost:8080/api/gpt/question\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 로그인 토큰\r\n      },\r\n      body: JSON.stringify({\r\n        prompt: message,\r\n        max_tokens: 150,\r\n      }),\r\n      credentials: \"include\", // 클라이언트와 서버가 통신할때 쿠키 값을 공유하겠다는 설정\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data.choices[0].text.trim();\r\n  } catch (error) {\r\n    console.error(\"OpenAI API Error:\", error);\r\n    return \"Sorry, I am unable to respond at the moment.\";\r\n  }\r\n};\r\n\r\nexport default ChatGptService;\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,qBAAqB,CAAC,CAAC;;AAE9C,MAAMC,cAAc,GAAG,MAAOC,OAAO,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;QAChB;MACF,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,MAAM,EAAER,OAAO;QACfS,UAAU,EAAE;MACd,CAAC,CAAC;MACFC,WAAW,EAAE,SAAS,CAAE;IAC1B,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;EACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,8CAA8C;EACvD;AACF,CAAC;AAACE,EAAA,GArBInB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}