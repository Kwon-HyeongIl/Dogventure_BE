{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useGeolocation = () => {\n  _s();\n  const [currentMyLocation, setCurrentMyLocation] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [locationLoading, setLocationLoading] = useState(false);\n  const getCurPostion = () => {\n    setLocationLoading(true);\n    const success = location => {\n      setCurrentMyLocation({\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      });\n      setLocationLoading(false);\n    };\n    const error = () => {\n      setCurrentMyLocation({\n        lat: 35.1339867555,\n        lng: 129.1055536386\n      });\n      setLocationLoading(false);\n    };\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error);\n    }\n  };\n  useEffect(() => {\n    getCurPostion();\n  }, []);\n  return {\n    currentMyLocation,\n    locationLoading,\n    getCurPostion\n  };\n};\n_s(useGeolocation, \"8dqwAq26Zm4EZv1h6zhEDooqhdA=\");\nexport default useGeolocation;","map":{"version":3,"names":["useEffect","useState","useGeolocation","_s","currentMyLocation","setCurrentMyLocation","lat","lng","locationLoading","setLocationLoading","getCurPostion","success","location","coords","latitude","longitude","error","navigator","geolocation","getCurrentPosition"],"sources":["C:/GitHub/2024_1_Web7/src/hooks/useGeolocation.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useGeolocation = () => {\r\n  const [currentMyLocation, setCurrentMyLocation] = useState({\r\n    lat: 0,\r\n    lng: 0,\r\n  });\r\n  const [locationLoading, setLocationLoading] = useState(false);\r\n\r\n  const getCurPostion = () => {\r\n    setLocationLoading(true);\r\n    const success = (location) => {\r\n      setCurrentMyLocation({\r\n        lat: location.coords.latitude,\r\n        lng: location.coords.longitude,\r\n      });\r\n      setLocationLoading(false);\r\n    };\r\n\r\n    const error = () => {\r\n      setCurrentMyLocation({ lat: 35.1339867555, lng: 129.1055536386 });\r\n      setLocationLoading(false);\r\n    };\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurPostion();\r\n  }, []);\r\n\r\n  return { currentMyLocation, locationLoading, getCurPostion };\r\n};\r\n\r\nexport default useGeolocation;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGJ,QAAQ,CAAC;IACzDK,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE;EACP,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1BD,kBAAkB,CAAC,IAAI,CAAC;IACxB,MAAME,OAAO,GAAIC,QAAQ,IAAK;MAC5BP,oBAAoB,CAAC;QACnBC,GAAG,EAAEM,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7BP,GAAG,EAAEK,QAAQ,CAACC,MAAM,CAACE;MACvB,CAAC,CAAC;MACFN,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,MAAMO,KAAK,GAAGA,CAAA,KAAM;MAClBX,oBAAoB,CAAC;QAAEC,GAAG,EAAE,aAAa;QAAEC,GAAG,EAAE;MAAe,CAAC,CAAC;MACjEE,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC;IAED,IAAIQ,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACR,OAAO,EAAEK,KAAK,CAAC;IAC1D;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEN,iBAAiB;IAAEI,eAAe;IAAEE;EAAc,CAAC;AAC9D,CAAC;AAACP,EAAA,CAhCID,cAAc;AAkCpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}